//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.LigaServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LigaServiceReference.ILigaService")]
    public interface ILigaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/Test", ReplyAction="http://tempuri.org/ILigaService/TestResponse")]
        string Test([System.ServiceModel.MessageParameterAttribute(Name="Test")] string Test1);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/Test", ReplyAction="http://tempuri.org/ILigaService/TestResponse")]
        System.Threading.Tasks.Task<string> TestAsync(string Test);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetAllBettors", ReplyAction="http://tempuri.org/ILigaService/GetAllBettorsResponse")]
        System.Collections.ObjectModel.Collection<Server.WcfModels.WcfBettor> GetAllBettors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetAllBettors", ReplyAction="http://tempuri.org/ILigaService/GetAllBettorsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfBettor>> GetAllBettorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetBettorById", ReplyAction="http://tempuri.org/ILigaService/GetBettorByIdResponse")]
        Server.WcfModels.WcfBettor GetBettorById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetBettorById", ReplyAction="http://tempuri.org/ILigaService/GetBettorByIdResponse")]
        System.Threading.Tasks.Task<Server.WcfModels.WcfBettor> GetBettorByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/AddBettor", ReplyAction="http://tempuri.org/ILigaService/AddBettorResponse")]
        void AddBettor(Server.WcfModels.WcfBettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/AddBettor", ReplyAction="http://tempuri.org/ILigaService/AddBettorResponse")]
        System.Threading.Tasks.Task AddBettorAsync(Server.WcfModels.WcfBettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/EditBettor", ReplyAction="http://tempuri.org/ILigaService/EditBettorResponse")]
        void EditBettor(Server.WcfModels.WcfBettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/EditBettor", ReplyAction="http://tempuri.org/ILigaService/EditBettorResponse")]
        System.Threading.Tasks.Task EditBettorAsync(Server.WcfModels.WcfBettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteBettor", ReplyAction="http://tempuri.org/ILigaService/DeleteBettorResponse")]
        void DeleteBettor(Server.WcfModels.WcfBettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteBettor", ReplyAction="http://tempuri.org/ILigaService/DeleteBettorResponse")]
        System.Threading.Tasks.Task DeleteBettorAsync(Server.WcfModels.WcfBettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetAllTeams", ReplyAction="http://tempuri.org/ILigaService/GetAllTeamsResponse")]
        System.Collections.ObjectModel.Collection<Server.WcfModels.WcfTeam> GetAllTeams();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetAllTeams", ReplyAction="http://tempuri.org/ILigaService/GetAllTeamsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfTeam>> GetAllTeamsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetTeams", ReplyAction="http://tempuri.org/ILigaService/GetTeamsResponse")]
        System.Collections.ObjectModel.Collection<Server.WcfModels.WcfTeam> GetTeams(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetTeams", ReplyAction="http://tempuri.org/ILigaService/GetTeamsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfTeam>> GetTeamsAsync(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetTeamById", ReplyAction="http://tempuri.org/ILigaService/GetTeamByIdResponse")]
        Server.WcfModels.WcfTeam GetTeamById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetTeamById", ReplyAction="http://tempuri.org/ILigaService/GetTeamByIdResponse")]
        System.Threading.Tasks.Task<Server.WcfModels.WcfTeam> GetTeamByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/AddTeam", ReplyAction="http://tempuri.org/ILigaService/AddTeamResponse")]
        void AddTeam(Server.WcfModels.WcfTeam team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/AddTeam", ReplyAction="http://tempuri.org/ILigaService/AddTeamResponse")]
        System.Threading.Tasks.Task AddTeamAsync(Server.WcfModels.WcfTeam team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/EditTeam", ReplyAction="http://tempuri.org/ILigaService/EditTeamResponse")]
        void EditTeam(Server.WcfModels.WcfTeam team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/EditTeam", ReplyAction="http://tempuri.org/ILigaService/EditTeamResponse")]
        System.Threading.Tasks.Task EditTeamAsync(Server.WcfModels.WcfTeam team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteTeam", ReplyAction="http://tempuri.org/ILigaService/DeleteTeamResponse")]
        void DeleteTeam(Server.WcfModels.WcfTeam team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteTeam", ReplyAction="http://tempuri.org/ILigaService/DeleteTeamResponse")]
        System.Threading.Tasks.Task DeleteTeamAsync(Server.WcfModels.WcfTeam team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/AddTeamToSeason", ReplyAction="http://tempuri.org/ILigaService/AddTeamToSeasonResponse")]
        void AddTeamToSeason(Server.WcfModels.WcfTeam team, Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/AddTeamToSeason", ReplyAction="http://tempuri.org/ILigaService/AddTeamToSeasonResponse")]
        System.Threading.Tasks.Task AddTeamToSeasonAsync(Server.WcfModels.WcfTeam team, Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteTeamFromSeason", ReplyAction="http://tempuri.org/ILigaService/DeleteTeamFromSeasonResponse")]
        void DeleteTeamFromSeason(Server.WcfModels.WcfTeam team, Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteTeamFromSeason", ReplyAction="http://tempuri.org/ILigaService/DeleteTeamFromSeasonResponse")]
        System.Threading.Tasks.Task DeleteTeamFromSeasonAsync(Server.WcfModels.WcfTeam team, Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetAllMatches", ReplyAction="http://tempuri.org/ILigaService/GetAllMatchesResponse")]
        System.Collections.ObjectModel.Collection<Server.WcfModels.WcfMatch> GetAllMatches();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetAllMatches", ReplyAction="http://tempuri.org/ILigaService/GetAllMatchesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfMatch>> GetAllMatchesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetMatches", ReplyAction="http://tempuri.org/ILigaService/GetMatchesResponse")]
        System.Collections.ObjectModel.Collection<Server.WcfModels.WcfMatch> GetMatches(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetMatches", ReplyAction="http://tempuri.org/ILigaService/GetMatchesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfMatch>> GetMatchesAsync(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetMatchById", ReplyAction="http://tempuri.org/ILigaService/GetMatchByIdResponse")]
        Server.WcfModels.WcfMatch GetMatchById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetMatchById", ReplyAction="http://tempuri.org/ILigaService/GetMatchByIdResponse")]
        System.Threading.Tasks.Task<Server.WcfModels.WcfMatch> GetMatchByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/AddMatch", ReplyAction="http://tempuri.org/ILigaService/AddMatchResponse")]
        void AddMatch(Server.WcfModels.WcfMatch match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/AddMatch", ReplyAction="http://tempuri.org/ILigaService/AddMatchResponse")]
        System.Threading.Tasks.Task AddMatchAsync(Server.WcfModels.WcfMatch match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/EditMatch", ReplyAction="http://tempuri.org/ILigaService/EditMatchResponse")]
        void EditMatch(Server.WcfModels.WcfMatch match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/EditMatch", ReplyAction="http://tempuri.org/ILigaService/EditMatchResponse")]
        System.Threading.Tasks.Task EditMatchAsync(Server.WcfModels.WcfMatch match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteMatch", ReplyAction="http://tempuri.org/ILigaService/DeleteMatchResponse")]
        void DeleteMatch(Server.WcfModels.WcfMatch match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteMatch", ReplyAction="http://tempuri.org/ILigaService/DeleteMatchResponse")]
        System.Threading.Tasks.Task DeleteMatchAsync(Server.WcfModels.WcfMatch match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GenerateMatches", ReplyAction="http://tempuri.org/ILigaService/GenerateMatchesResponse")]
        void GenerateMatches(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GenerateMatches", ReplyAction="http://tempuri.org/ILigaService/GenerateMatchesResponse")]
        System.Threading.Tasks.Task GenerateMatchesAsync(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetAllSeasons", ReplyAction="http://tempuri.org/ILigaService/GetAllSeasonsResponse")]
        System.Collections.ObjectModel.Collection<Server.WcfModels.WcfSeason> GetAllSeasons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetAllSeasons", ReplyAction="http://tempuri.org/ILigaService/GetAllSeasonsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfSeason>> GetAllSeasonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetSeasonById", ReplyAction="http://tempuri.org/ILigaService/GetSeasonByIdResponse")]
        Server.WcfModels.WcfSeason GetSeasonById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetSeasonById", ReplyAction="http://tempuri.org/ILigaService/GetSeasonByIdResponse")]
        System.Threading.Tasks.Task<Server.WcfModels.WcfSeason> GetSeasonByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/AddSeason", ReplyAction="http://tempuri.org/ILigaService/AddSeasonResponse")]
        void AddSeason(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/AddSeason", ReplyAction="http://tempuri.org/ILigaService/AddSeasonResponse")]
        System.Threading.Tasks.Task AddSeasonAsync(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/EditSeason", ReplyAction="http://tempuri.org/ILigaService/EditSeasonResponse")]
        void EditSeason(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/EditSeason", ReplyAction="http://tempuri.org/ILigaService/EditSeasonResponse")]
        System.Threading.Tasks.Task EditSeasonAsync(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteSeason", ReplyAction="http://tempuri.org/ILigaService/DeleteSeasonResponse")]
        void DeleteSeason(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteSeason", ReplyAction="http://tempuri.org/ILigaService/DeleteSeasonResponse")]
        System.Threading.Tasks.Task DeleteSeasonAsync(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetAllBets", ReplyAction="http://tempuri.org/ILigaService/GetAllBetsResponse")]
        System.Collections.ObjectModel.Collection<Server.WcfModels.WcfBet> GetAllBets();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetAllBets", ReplyAction="http://tempuri.org/ILigaService/GetAllBetsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfBet>> GetAllBetsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetBets", ReplyAction="http://tempuri.org/ILigaService/GetBetsResponse")]
        System.Collections.ObjectModel.Collection<Server.WcfModels.WcfBet> GetBets(Server.WcfModels.WcfBettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetBets", ReplyAction="http://tempuri.org/ILigaService/GetBetsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfBet>> GetBetsAsync(Server.WcfModels.WcfBettor bettor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetBetById", ReplyAction="http://tempuri.org/ILigaService/GetBetByIdResponse")]
        Server.WcfModels.WcfBet GetBetById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetBetById", ReplyAction="http://tempuri.org/ILigaService/GetBetByIdResponse")]
        System.Threading.Tasks.Task<Server.WcfModels.WcfBet> GetBetByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/AddBet", ReplyAction="http://tempuri.org/ILigaService/AddBetResponse")]
        void AddBet(Server.WcfModels.WcfBet bet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/AddBet", ReplyAction="http://tempuri.org/ILigaService/AddBetResponse")]
        System.Threading.Tasks.Task AddBetAsync(Server.WcfModels.WcfBet bet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/EditBet", ReplyAction="http://tempuri.org/ILigaService/EditBetResponse")]
        void EditBet(Server.WcfModels.WcfBet bet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/EditBet", ReplyAction="http://tempuri.org/ILigaService/EditBetResponse")]
        System.Threading.Tasks.Task EditBetAsync(Server.WcfModels.WcfBet bet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteBet", ReplyAction="http://tempuri.org/ILigaService/DeleteBetResponse")]
        void DeleteBet(Server.WcfModels.WcfBet bet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteBet", ReplyAction="http://tempuri.org/ILigaService/DeleteBetResponse")]
        System.Threading.Tasks.Task DeleteBetAsync(Server.WcfModels.WcfBet bet);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetAllRelations", ReplyAction="http://tempuri.org/ILigaService/GetAllRelationsResponse")]
        System.Collections.ObjectModel.Collection<Server.WcfModels.WcfRelation> GetAllRelations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetAllRelations", ReplyAction="http://tempuri.org/ILigaService/GetAllRelationsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfRelation>> GetAllRelationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetRelationsByTeam", ReplyAction="http://tempuri.org/ILigaService/GetRelationsByTeamResponse")]
        System.Collections.ObjectModel.Collection<Server.WcfModels.WcfRelation> GetRelationsByTeam(Server.WcfModels.WcfTeam team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetRelationsByTeam", ReplyAction="http://tempuri.org/ILigaService/GetRelationsByTeamResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfRelation>> GetRelationsByTeamAsync(Server.WcfModels.WcfTeam team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetRelationsBySeason", ReplyAction="http://tempuri.org/ILigaService/GetRelationsBySeasonResponse")]
        System.Collections.ObjectModel.Collection<Server.WcfModels.WcfRelation> GetRelationsBySeason(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/GetRelationsBySeason", ReplyAction="http://tempuri.org/ILigaService/GetRelationsBySeasonResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfRelation>> GetRelationsBySeasonAsync(Server.WcfModels.WcfSeason season);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteRelation", ReplyAction="http://tempuri.org/ILigaService/DeleteRelationResponse")]
        void DeleteRelation(Server.WcfModels.WcfRelation relation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILigaService/DeleteRelation", ReplyAction="http://tempuri.org/ILigaService/DeleteRelationResponse")]
        System.Threading.Tasks.Task DeleteRelationAsync(Server.WcfModels.WcfRelation relation);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILigaServiceChannel : Client.LigaServiceReference.ILigaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LigaServiceClient : System.ServiceModel.ClientBase<Client.LigaServiceReference.ILigaService>, Client.LigaServiceReference.ILigaService {
        
        public LigaServiceClient() {
        }
        
        public LigaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LigaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LigaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LigaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Test(string Test1) {
            return base.Channel.Test(Test1);
        }
        
        public System.Threading.Tasks.Task<string> TestAsync(string Test) {
            return base.Channel.TestAsync(Test);
        }
        
        public System.Collections.ObjectModel.Collection<Server.WcfModels.WcfBettor> GetAllBettors() {
            return base.Channel.GetAllBettors();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfBettor>> GetAllBettorsAsync() {
            return base.Channel.GetAllBettorsAsync();
        }
        
        public Server.WcfModels.WcfBettor GetBettorById(int id) {
            return base.Channel.GetBettorById(id);
        }
        
        public System.Threading.Tasks.Task<Server.WcfModels.WcfBettor> GetBettorByIdAsync(int id) {
            return base.Channel.GetBettorByIdAsync(id);
        }
        
        public void AddBettor(Server.WcfModels.WcfBettor bettor) {
            base.Channel.AddBettor(bettor);
        }
        
        public System.Threading.Tasks.Task AddBettorAsync(Server.WcfModels.WcfBettor bettor) {
            return base.Channel.AddBettorAsync(bettor);
        }
        
        public void EditBettor(Server.WcfModels.WcfBettor bettor) {
            base.Channel.EditBettor(bettor);
        }
        
        public System.Threading.Tasks.Task EditBettorAsync(Server.WcfModels.WcfBettor bettor) {
            return base.Channel.EditBettorAsync(bettor);
        }
        
        public void DeleteBettor(Server.WcfModels.WcfBettor bettor) {
            base.Channel.DeleteBettor(bettor);
        }
        
        public System.Threading.Tasks.Task DeleteBettorAsync(Server.WcfModels.WcfBettor bettor) {
            return base.Channel.DeleteBettorAsync(bettor);
        }
        
        public System.Collections.ObjectModel.Collection<Server.WcfModels.WcfTeam> GetAllTeams() {
            return base.Channel.GetAllTeams();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfTeam>> GetAllTeamsAsync() {
            return base.Channel.GetAllTeamsAsync();
        }
        
        public System.Collections.ObjectModel.Collection<Server.WcfModels.WcfTeam> GetTeams(Server.WcfModels.WcfSeason season) {
            return base.Channel.GetTeams(season);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfTeam>> GetTeamsAsync(Server.WcfModels.WcfSeason season) {
            return base.Channel.GetTeamsAsync(season);
        }
        
        public Server.WcfModels.WcfTeam GetTeamById(int id) {
            return base.Channel.GetTeamById(id);
        }
        
        public System.Threading.Tasks.Task<Server.WcfModels.WcfTeam> GetTeamByIdAsync(int id) {
            return base.Channel.GetTeamByIdAsync(id);
        }
        
        public void AddTeam(Server.WcfModels.WcfTeam team) {
            base.Channel.AddTeam(team);
        }
        
        public System.Threading.Tasks.Task AddTeamAsync(Server.WcfModels.WcfTeam team) {
            return base.Channel.AddTeamAsync(team);
        }
        
        public void EditTeam(Server.WcfModels.WcfTeam team) {
            base.Channel.EditTeam(team);
        }
        
        public System.Threading.Tasks.Task EditTeamAsync(Server.WcfModels.WcfTeam team) {
            return base.Channel.EditTeamAsync(team);
        }
        
        public void DeleteTeam(Server.WcfModels.WcfTeam team) {
            base.Channel.DeleteTeam(team);
        }
        
        public System.Threading.Tasks.Task DeleteTeamAsync(Server.WcfModels.WcfTeam team) {
            return base.Channel.DeleteTeamAsync(team);
        }
        
        public void AddTeamToSeason(Server.WcfModels.WcfTeam team, Server.WcfModels.WcfSeason season) {
            base.Channel.AddTeamToSeason(team, season);
        }
        
        public System.Threading.Tasks.Task AddTeamToSeasonAsync(Server.WcfModels.WcfTeam team, Server.WcfModels.WcfSeason season) {
            return base.Channel.AddTeamToSeasonAsync(team, season);
        }
        
        public void DeleteTeamFromSeason(Server.WcfModels.WcfTeam team, Server.WcfModels.WcfSeason season) {
            base.Channel.DeleteTeamFromSeason(team, season);
        }
        
        public System.Threading.Tasks.Task DeleteTeamFromSeasonAsync(Server.WcfModels.WcfTeam team, Server.WcfModels.WcfSeason season) {
            return base.Channel.DeleteTeamFromSeasonAsync(team, season);
        }
        
        public System.Collections.ObjectModel.Collection<Server.WcfModels.WcfMatch> GetAllMatches() {
            return base.Channel.GetAllMatches();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfMatch>> GetAllMatchesAsync() {
            return base.Channel.GetAllMatchesAsync();
        }
        
        public System.Collections.ObjectModel.Collection<Server.WcfModels.WcfMatch> GetMatches(Server.WcfModels.WcfSeason season) {
            return base.Channel.GetMatches(season);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfMatch>> GetMatchesAsync(Server.WcfModels.WcfSeason season) {
            return base.Channel.GetMatchesAsync(season);
        }
        
        public Server.WcfModels.WcfMatch GetMatchById(int id) {
            return base.Channel.GetMatchById(id);
        }
        
        public System.Threading.Tasks.Task<Server.WcfModels.WcfMatch> GetMatchByIdAsync(int id) {
            return base.Channel.GetMatchByIdAsync(id);
        }
        
        public void AddMatch(Server.WcfModels.WcfMatch match) {
            base.Channel.AddMatch(match);
        }
        
        public System.Threading.Tasks.Task AddMatchAsync(Server.WcfModels.WcfMatch match) {
            return base.Channel.AddMatchAsync(match);
        }
        
        public void EditMatch(Server.WcfModels.WcfMatch match) {
            base.Channel.EditMatch(match);
        }
        
        public System.Threading.Tasks.Task EditMatchAsync(Server.WcfModels.WcfMatch match) {
            return base.Channel.EditMatchAsync(match);
        }
        
        public void DeleteMatch(Server.WcfModels.WcfMatch match) {
            base.Channel.DeleteMatch(match);
        }
        
        public System.Threading.Tasks.Task DeleteMatchAsync(Server.WcfModels.WcfMatch match) {
            return base.Channel.DeleteMatchAsync(match);
        }
        
        public void GenerateMatches(Server.WcfModels.WcfSeason season) {
            base.Channel.GenerateMatches(season);
        }
        
        public System.Threading.Tasks.Task GenerateMatchesAsync(Server.WcfModels.WcfSeason season) {
            return base.Channel.GenerateMatchesAsync(season);
        }
        
        public System.Collections.ObjectModel.Collection<Server.WcfModels.WcfSeason> GetAllSeasons() {
            return base.Channel.GetAllSeasons();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfSeason>> GetAllSeasonsAsync() {
            return base.Channel.GetAllSeasonsAsync();
        }
        
        public Server.WcfModels.WcfSeason GetSeasonById(int id) {
            return base.Channel.GetSeasonById(id);
        }
        
        public System.Threading.Tasks.Task<Server.WcfModels.WcfSeason> GetSeasonByIdAsync(int id) {
            return base.Channel.GetSeasonByIdAsync(id);
        }
        
        public void AddSeason(Server.WcfModels.WcfSeason season) {
            base.Channel.AddSeason(season);
        }
        
        public System.Threading.Tasks.Task AddSeasonAsync(Server.WcfModels.WcfSeason season) {
            return base.Channel.AddSeasonAsync(season);
        }
        
        public void EditSeason(Server.WcfModels.WcfSeason season) {
            base.Channel.EditSeason(season);
        }
        
        public System.Threading.Tasks.Task EditSeasonAsync(Server.WcfModels.WcfSeason season) {
            return base.Channel.EditSeasonAsync(season);
        }
        
        public void DeleteSeason(Server.WcfModels.WcfSeason season) {
            base.Channel.DeleteSeason(season);
        }
        
        public System.Threading.Tasks.Task DeleteSeasonAsync(Server.WcfModels.WcfSeason season) {
            return base.Channel.DeleteSeasonAsync(season);
        }
        
        public System.Collections.ObjectModel.Collection<Server.WcfModels.WcfBet> GetAllBets() {
            return base.Channel.GetAllBets();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfBet>> GetAllBetsAsync() {
            return base.Channel.GetAllBetsAsync();
        }
        
        public System.Collections.ObjectModel.Collection<Server.WcfModels.WcfBet> GetBets(Server.WcfModels.WcfBettor bettor) {
            return base.Channel.GetBets(bettor);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfBet>> GetBetsAsync(Server.WcfModels.WcfBettor bettor) {
            return base.Channel.GetBetsAsync(bettor);
        }
        
        public Server.WcfModels.WcfBet GetBetById(int id) {
            return base.Channel.GetBetById(id);
        }
        
        public System.Threading.Tasks.Task<Server.WcfModels.WcfBet> GetBetByIdAsync(int id) {
            return base.Channel.GetBetByIdAsync(id);
        }
        
        public void AddBet(Server.WcfModels.WcfBet bet) {
            base.Channel.AddBet(bet);
        }
        
        public System.Threading.Tasks.Task AddBetAsync(Server.WcfModels.WcfBet bet) {
            return base.Channel.AddBetAsync(bet);
        }
        
        public void EditBet(Server.WcfModels.WcfBet bet) {
            base.Channel.EditBet(bet);
        }
        
        public System.Threading.Tasks.Task EditBetAsync(Server.WcfModels.WcfBet bet) {
            return base.Channel.EditBetAsync(bet);
        }
        
        public void DeleteBet(Server.WcfModels.WcfBet bet) {
            base.Channel.DeleteBet(bet);
        }
        
        public System.Threading.Tasks.Task DeleteBetAsync(Server.WcfModels.WcfBet bet) {
            return base.Channel.DeleteBetAsync(bet);
        }
        
        public System.Collections.ObjectModel.Collection<Server.WcfModels.WcfRelation> GetAllRelations() {
            return base.Channel.GetAllRelations();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfRelation>> GetAllRelationsAsync() {
            return base.Channel.GetAllRelationsAsync();
        }
        
        public System.Collections.ObjectModel.Collection<Server.WcfModels.WcfRelation> GetRelationsByTeam(Server.WcfModels.WcfTeam team) {
            return base.Channel.GetRelationsByTeam(team);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfRelation>> GetRelationsByTeamAsync(Server.WcfModels.WcfTeam team) {
            return base.Channel.GetRelationsByTeamAsync(team);
        }
        
        public System.Collections.ObjectModel.Collection<Server.WcfModels.WcfRelation> GetRelationsBySeason(Server.WcfModels.WcfSeason season) {
            return base.Channel.GetRelationsBySeason(season);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.Collection<Server.WcfModels.WcfRelation>> GetRelationsBySeasonAsync(Server.WcfModels.WcfSeason season) {
            return base.Channel.GetRelationsBySeasonAsync(season);
        }
        
        public void DeleteRelation(Server.WcfModels.WcfRelation relation) {
            base.Channel.DeleteRelation(relation);
        }
        
        public System.Threading.Tasks.Task DeleteRelationAsync(Server.WcfModels.WcfRelation relation) {
            return base.Channel.DeleteRelationAsync(relation);
        }
    }
}
